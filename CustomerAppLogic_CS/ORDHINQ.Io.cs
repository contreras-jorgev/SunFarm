//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using ASNA.DataGate.Client;
using ASNA.DataGate.Common;
using ASNA.QSys.Runtime;
using System;
using System.Collections.Generic;


namespace YourCompany.YourApplication
{
    
    public partial class ORDHINQ
    {
        private FixedString<_22> WINTITLE;
        private FixedString<_10> CSRREC;
        private FixedString<_10> CSRFLD;
        private FixedDecimal<_9, _0> DTORDNUM;
        private FixedDate<_ISO, _Default> DTORDDATE;
        private FixedDate<_ISO, _Default> DTSHPDATE;
        private FixedDecimal<_8, _0> DTDELDATE;
        private FixedDecimal<_3, _0> DTSHPVIA;
        private FixedString<_18> DTWEIGHT;
        private FixedString<_50> SCRCUST;
        private FixedString<_20> SCRPHONE;
        private FixedString<_35> CMADDR1;
        private FixedString<_14> SCRFAX;
        private FixedString<_35> CMADDR2;
        private FixedString<_1> CMACTIVE;
        private FixedString<_30> CMCITY;
        private FixedString<_2> CMSTATE;
        private FixedString<_10> CMPOSTCODE;
        private FixedDecimal<_9, _0> SETORDNUM;
        private FixedDecimal<_2, _0> SFSEL;
        private FixedString<_1> SFCOLOR;
        private FixedDecimal<_9, _0> SFORDNUM;
        private FixedDate<_ISO, _Default> SFORDDATE;
        private FixedDate<_ISO, _Default> SFSHPDATE;
        private FixedDecimal<_8, _0> SFDELDATE;
        private FixedDecimal<_13, _4> SFORDAMT;
        private FixedString<_4> SFFILESTAT;
        private FixedDecimal<_3, _0> SFSHPVIA;
        private FixedString<_10> aPGMQ;
        private FixedString<_4> aMSGKY;
        private FixedString<Len<_1, _2, _8>> MESSAGETEXT;
        private FixedDecimal<_9, _0> CMCUSTNO;
        private FixedString<_40> CMNAME;
        private FixedDecimal<_10, _0> CMFAX;
        private FixedString<_20> CMPHONE;
        private FixedString<_5> CMUSRFLGS;
        private FixedString<_40> CMCONTACT;
        private FixedString<_40> CMCONEMAL;
        private FixedString<_1> CMYN01;
        private FixedString<_1> CMYN02;
        private FixedString<_1> CMYN03;
        static ILayout OrdhDS_000 = Layout.Packed(9, 0);
        static ILayout OrdhDS_001 = Layout.Packed(9, 0);
        static ILayout OrdhDS_002 = Layout.Date(DateTimeFormat.ISO, DateTimeSeparator.Default);
        static ILayout OrdhDS_003 = Layout.Date(DateTimeFormat.ISO, DateTimeSeparator.Default);
        static ILayout OrdhDS_004 = Layout.Packed(8, 0);
        static ILayout OrdhDS_005 = Layout.Zoned(3, 0);
        static ILayout OrdhDS_006 = Layout.Packed(13, 4);
        static ILayout OrdhDS_007 = Layout.Packed(13, 4);
        static ILayout OrdhDS_008 = Layout.Packed(9, 2);
        private static Dictionary<string, string> OrderHdrL2FormatIDs = new Dictionary<string, string>()
        {
            { "RORDRHDR", "HGKtY5i8LuqjN1v8eIQidC7WD6Q=" }
        };
        private static Dictionary<string, string> OrderHdrL1FormatIDs = new Dictionary<string, string>()
        {
            { "RORDRHDR", "HGKtY5i8LuqjN1v8eIQidC7WD6Q=" }
        };
        private static Dictionary<string, string> CustomerL1FormatIDs = new Dictionary<string, string>()
        {
            { "RCUSTOMER", "6su4S42+ard0ZHitdjHOFT1WPw0=" }
        };

        private FixedDecimal<_9, _0> ORDNUM
        {
            get
            {
                return this.OrdhDS.GetPacked(0, 9, 0);
            }
            set
            {
                this.OrdhDS.SetPacked(value, 0, 9, 0);
            }
        }
        private FixedDecimal<_9, _0> ORDCUST
        {
            get
            {
                return this.OrdhDS.GetPacked(5, 9, 0);
            }
            set
            {
                this.OrdhDS.SetPacked(value, 5, 9, 0);
            }
        }
        private FixedDate<_ISO, _Default> ORDDATE
        {
            get
            {
                return this.OrdhDS.GetDate(10, DateTimeFormat.ISO, DateTimeSeparator.Default);
            }
            set
            {
                this.OrdhDS.SetDate(value, 10, DateTimeFormat.ISO, DateTimeSeparator.Default);
            }
        }
        private FixedDate<_ISO, _Default> ORDSHPDATE
        {
            get
            {
                return this.OrdhDS.GetDate(20, DateTimeFormat.ISO, DateTimeSeparator.Default);
            }
            set
            {
                this.OrdhDS.SetDate(value, 20, DateTimeFormat.ISO, DateTimeSeparator.Default);
            }
        }
        private FixedDecimal<_8, _0> ORDDELDATE
        {
            get
            {
                return this.OrdhDS.GetPacked(30, 8, 0);
            }
            set
            {
                this.OrdhDS.SetPacked(value, 30, 8, 0);
            }
        }
        private FixedDecimal<_3, _0> ORDSHPVIA
        {
            get
            {
                return this.OrdhDS.GetZoned(35, 3, 0);
            }
            set
            {
                this.OrdhDS.SetZoned(value, 35, 3, 0);
            }
        }
        private FixedDecimal<_13, _4> ORDAMOUNT
        {
            get
            {
                return this.OrdhDS.GetPacked(38, 13, 4);
            }
            set
            {
                this.OrdhDS.SetPacked(value, 38, 13, 4);
            }
        }
        private FixedDecimal<_13, _4> ORDWEIGHT
        {
            get
            {
                return this.OrdhDS.GetPacked(45, 13, 4);
            }
            set
            {
                this.OrdhDS.SetPacked(value, 45, 13, 4);
            }
        }
        private FixedDecimal<_9, _2> ORDSHPCHG
        {
            get
            {
                return this.OrdhDS.GetPacked(52, 9, 2);
            }
            set
            {
                this.OrdhDS.SetPacked(value, 52, 9, 2);
            }
        }
        private void PopulateBufferORDHDSPFMYWINDOW(AdgDataSet _dataSet)
        {
            var _table = _dataSet.GetAdgTable("MYWINDOW");
            System.Data.DataRow _row = _table.Row;
            _row["WINTITLE"] = ((string)(WINTITLE));
        }
        private void PopulateFieldsORDHDSPFMYWINDOW(AdgDataSet _dataSet)
        {
        }
        private void PopulateBufferORDHDSPFORDHREC(AdgDataSet _dataSet)
        {
            var _table = _dataSet.GetAdgTable("ORDHREC");
            System.Data.DataRow _row = _table.Row;
            _row["CSRREC"] = ((string)(CSRREC));
            _row["CSRFLD"] = ((string)(CSRFLD));
            _row["DTORDNUM"] = ((decimal)(DTORDNUM));
            _row["DTORDDATE"] = ((System.DateTime)(DTORDDATE));
            _row["DTSHPDATE"] = ((System.DateTime)(DTSHPDATE));
            _row["DTDELDATE"] = ((decimal)(DTDELDATE));
            _row["DTSHPVIA"] = ((decimal)(DTSHPVIA));
            _row["DTWEIGHT"] = ((string)(DTWEIGHT));
        }
        private void PopulateFieldsORDHDSPFORDHREC(AdgDataSet _dataSet)
        {
            var _table = _dataSet.GetAdgTable("ORDHREC");
            System.Data.DataRow _row = _table.Row;
            CSRREC = ((string)(_row["CSRREC"]));
            CSRFLD = ((string)(_row["CSRFLD"]));
            DTORDDATE = ((System.DateTime)(_row["DTORDDATE"]));
            DTSHPDATE = ((System.DateTime)(_row["DTSHPDATE"]));
            DTDELDATE = ((decimal)(_row["DTDELDATE"]));
            DTSHPVIA = ((decimal)(_row["DTSHPVIA"]));
        }
        private void PopulateBufferORDHDSPFSFLC(AdgDataSet _dataSet)
        {
            var _table = _dataSet.GetAdgTable("SFLC");
            System.Data.DataRow _row = _table.Row;
            _row["SCRCUST"] = ((string)(SCRCUST));
            _row["SCRPHONE"] = ((string)(SCRPHONE));
            _row["CMADDR1"] = ((string)(CMADDR1));
            _row["SCRFAX"] = ((string)(SCRFAX));
            _row["CMADDR2"] = ((string)(CMADDR2));
            _row["CMACTIVE"] = ((string)(CMACTIVE));
            _row["CMCITY"] = ((string)(CMCITY));
            _row["CMSTATE"] = ((string)(CMSTATE));
            _row["CMPOSTCODE"] = ((string)(CMPOSTCODE));
            _row["SETORDNUM"] = ((decimal)(SETORDNUM));
        }
        private void PopulateFieldsORDHDSPFSFLC(AdgDataSet _dataSet)
        {
            var _table = _dataSet.GetAdgTable("SFLC");
            System.Data.DataRow _row = _table.Row;
            SETORDNUM = ((decimal)(_row["SETORDNUM"]));
        }
        private void PopulateBufferORDHDSPFSFL1(AdgDataSet _dataSet)
        {
            var _table = _dataSet.GetAdgTable("SFL1");
            System.Data.DataRow _row = _table.Row;
            _row["SFSEL"] = ((decimal)(SFSEL));
            _row["SFCOLOR"] = ((string)(SFCOLOR));
            _row["SFORDNUM"] = ((decimal)(SFORDNUM));
            _row["SFORDDATE"] = ((System.DateTime)(SFORDDATE));
            _row["SFSHPDATE"] = ((System.DateTime)(SFSHPDATE));
            _row["SFDELDATE"] = ((decimal)(SFDELDATE));
            _row["SFORDAMT"] = ((decimal)(SFORDAMT));
            _row["SFFILESTAT"] = ((string)(SFFILESTAT));
            _row["SFSHPVIA"] = ((decimal)(SFSHPVIA));
        }
        private void PopulateFieldsORDHDSPFSFL1(AdgDataSet _dataSet)
        {
            var _table = _dataSet.GetAdgTable("SFL1");
            System.Data.DataRow _row = _table.Row;
            SFSEL = ((decimal)(_row["SFSEL"]));
            SFCOLOR = ((string)(_row["SFCOLOR"]));
            SFORDNUM = ((decimal)(_row["SFORDNUM"]));
            SFORDDATE = ((System.DateTime)(_row["SFORDDATE"]));
            SFSHPDATE = ((System.DateTime)(_row["SFSHPDATE"]));
            SFDELDATE = ((decimal)(_row["SFDELDATE"]));
            SFORDAMT = ((decimal)(_row["SFORDAMT"]));
            SFFILESTAT = ((string)(_row["SFFILESTAT"]));
            SFSHPVIA = ((decimal)(_row["SFSHPVIA"]));
        }
        private void PopulateBufferORDHDSPFKEYS(AdgDataSet _dataSet)
        {
        }
        private void PopulateFieldsORDHDSPFKEYS(AdgDataSet _dataSet)
        {
        }
        private void PopulateBufferORDHDSPFMSGSFC(AdgDataSet _dataSet)
        {
            var _table = _dataSet.GetAdgTable("MSGSFC");
            System.Data.DataRow _row = _table.Row;
            _row["@PGMQ"] = ((string)(aPGMQ));
        }
        private void PopulateFieldsORDHDSPFMSGSFC(AdgDataSet _dataSet)
        {
        }
        private void PopulateBufferORDHDSPFMSGSF(AdgDataSet _dataSet)
        {
            var _table = _dataSet.GetAdgTable("MSGSF");
            System.Data.DataRow _row = _table.Row;
            _row["@MSGKY"] = ((string)(aMSGKY));
            _row["@PGMQ"] = ((string)(aPGMQ));
            _row["MESSAGETEXT"] = ((string)(MESSAGETEXT));
        }
        private void PopulateFieldsORDHDSPFMSGSF(AdgDataSet _dataSet)
        {
            var _table = _dataSet.GetAdgTable("MSGSF");
            System.Data.DataRow _row = _table.Row;
            aMSGKY = ((string)(_row["@MSGKY"]));
            aPGMQ = ((string)(_row["@PGMQ"]));
            MESSAGETEXT = ((string)(_row["MESSAGETEXT"]));
        }
        private void PopulateBufferORDHDSPF(string _recordFormatName, AdgDataSet _dataSet)
        {
            if (string.Equals(_recordFormatName, "MYWINDOW", System.StringComparison.CurrentCultureIgnoreCase))
            {
                this.PopulateBufferORDHDSPFMYWINDOW(_dataSet);
            }
            else
            {
                if (string.Equals(_recordFormatName, "ORDHREC", System.StringComparison.CurrentCultureIgnoreCase))
                {
                    this.PopulateBufferORDHDSPFORDHREC(_dataSet);
                }
                else
                {
                    if (string.Equals(_recordFormatName, "SFLC", System.StringComparison.CurrentCultureIgnoreCase))
                    {
                        this.PopulateBufferORDHDSPFSFLC(_dataSet);
                    }
                    else
                    {
                        if (string.Equals(_recordFormatName, "SFL1", System.StringComparison.CurrentCultureIgnoreCase))
                        {
                            this.PopulateBufferORDHDSPFSFL1(_dataSet);
                        }
                        else
                        {
                            if (string.Equals(_recordFormatName, "KEYS", System.StringComparison.CurrentCultureIgnoreCase))
                            {
                                this.PopulateBufferORDHDSPFKEYS(_dataSet);
                            }
                            else
                            {
                                if (string.Equals(_recordFormatName, "MSGSFC", System.StringComparison.CurrentCultureIgnoreCase))
                                {
                                    this.PopulateBufferORDHDSPFMSGSFC(_dataSet);
                                }
                                else
                                {
                                    if (string.Equals(_recordFormatName, "MSGSF", System.StringComparison.CurrentCultureIgnoreCase))
                                    {
                                        this.PopulateBufferORDHDSPFMSGSF(_dataSet);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        private void PopulateFieldsORDHDSPF(string _recordFormatName, AdgDataSet _dataSet)
        {
            if (string.Equals(_recordFormatName, "MYWINDOW", System.StringComparison.CurrentCultureIgnoreCase))
            {
                this.PopulateFieldsORDHDSPFMYWINDOW(_dataSet);
            }
            else
            {
                if (string.Equals(_recordFormatName, "ORDHREC", System.StringComparison.CurrentCultureIgnoreCase))
                {
                    this.PopulateFieldsORDHDSPFORDHREC(_dataSet);
                }
                else
                {
                    if (string.Equals(_recordFormatName, "SFLC", System.StringComparison.CurrentCultureIgnoreCase))
                    {
                        this.PopulateFieldsORDHDSPFSFLC(_dataSet);
                    }
                    else
                    {
                        if (string.Equals(_recordFormatName, "SFL1", System.StringComparison.CurrentCultureIgnoreCase))
                        {
                            this.PopulateFieldsORDHDSPFSFL1(_dataSet);
                        }
                        else
                        {
                            if (string.Equals(_recordFormatName, "KEYS", System.StringComparison.CurrentCultureIgnoreCase))
                            {
                                this.PopulateFieldsORDHDSPFKEYS(_dataSet);
                            }
                            else
                            {
                                if (string.Equals(_recordFormatName, "MSGSFC", System.StringComparison.CurrentCultureIgnoreCase))
                                {
                                    this.PopulateFieldsORDHDSPFMSGSFC(_dataSet);
                                }
                                else
                                {
                                    if (string.Equals(_recordFormatName, "MSGSF", System.StringComparison.CurrentCultureIgnoreCase))
                                    {
                                        this.PopulateFieldsORDHDSPFMSGSF(_dataSet);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        private void PopulateBufferOrderHdrL2(string _, AdgDataSet _dataSet)
        {
            var _table = _dataSet.GetAdgTable("*FILE");
            System.Data.DataRow _row = _table.Row;
            _row["ORDNUM"] = ((decimal)(ORDNUM));
            _row["ORDCUST"] = ((decimal)(ORDCUST));
            _row["ORDDATE"] = ((System.DateTime)(ORDDATE));
            _row["ORDSHPDATE"] = ((System.DateTime)(ORDSHPDATE));
            _row["ORDDELDATE"] = ((decimal)(ORDDELDATE));
            _row["ORDSHPVIA"] = ((decimal)(ORDSHPVIA));
            _row["ORDAMOUNT"] = ((decimal)(ORDAMOUNT));
            _row["ORDWEIGHT"] = ((decimal)(ORDWEIGHT));
            _row["ORDSHPCHG"] = ((decimal)(ORDSHPCHG));
        }
        private void PopulateFieldsOrderHdrL2(string _, AdgDataSet _dataSet)
        {
            var _table = _dataSet.SetActive("*FILE");
            System.Data.DataRow _row = _table.Row;
            ORDNUM = ((decimal)(_row["ORDNUM"]));
            ORDCUST = ((decimal)(_row["ORDCUST"]));
            ORDDATE = ((System.DateTime)(_row["ORDDATE"]));
            ORDSHPDATE = ((System.DateTime)(_row["ORDSHPDATE"]));
            ORDDELDATE = ((decimal)(_row["ORDDELDATE"]));
            ORDSHPVIA = ((decimal)(_row["ORDSHPVIA"]));
            ORDAMOUNT = ((decimal)(_row["ORDAMOUNT"]));
            ORDWEIGHT = ((decimal)(_row["ORDWEIGHT"]));
            ORDSHPCHG = ((decimal)(_row["ORDSHPCHG"]));
        }
        private void PopulateBufferOrderHdrL1(string _, AdgDataSet _dataSet)
        {
            var _table = _dataSet.GetAdgTable("*FILE");
            System.Data.DataRow _row = _table.Row;
            _row["ORDNUM"] = ((decimal)(ORDNUM));
            _row["ORDCUST"] = ((decimal)(ORDCUST));
            _row["ORDDATE"] = ((System.DateTime)(ORDDATE));
            _row["ORDSHPDATE"] = ((System.DateTime)(ORDSHPDATE));
            _row["ORDDELDATE"] = ((decimal)(ORDDELDATE));
            _row["ORDSHPVIA"] = ((decimal)(ORDSHPVIA));
            _row["ORDAMOUNT"] = ((decimal)(ORDAMOUNT));
            _row["ORDWEIGHT"] = ((decimal)(ORDWEIGHT));
            _row["ORDSHPCHG"] = ((decimal)(ORDSHPCHG));
        }
        private void PopulateFieldsOrderHdrL1(string _, AdgDataSet _dataSet)
        {
            var _table = _dataSet.SetActive("*FILE");
            System.Data.DataRow _row = _table.Row;
            ORDNUM = ((decimal)(_row["ORDNUM"]));
            ORDCUST = ((decimal)(_row["ORDCUST"]));
            ORDDATE = ((System.DateTime)(_row["ORDDATE"]));
            ORDSHPDATE = ((System.DateTime)(_row["ORDSHPDATE"]));
            ORDDELDATE = ((decimal)(_row["ORDDELDATE"]));
            ORDSHPVIA = ((decimal)(_row["ORDSHPVIA"]));
            ORDAMOUNT = ((decimal)(_row["ORDAMOUNT"]));
            ORDWEIGHT = ((decimal)(_row["ORDWEIGHT"]));
            ORDSHPCHG = ((decimal)(_row["ORDSHPCHG"]));
        }
        private void PopulateBufferCustomerL1(string _, AdgDataSet _dataSet)
        {
            var _table = _dataSet.GetAdgTable("*FILE");
            System.Data.DataRow _row = _table.Row;
            _row["CMCUSTNO"] = ((decimal)(CMCUSTNO));
            _row["CMNAME"] = ((string)(CMNAME));
            _row["CMADDR1"] = ((string)(CMADDR1));
            _row["CMADDR2"] = ((string)(CMADDR2));
            _row["CMCITY"] = ((string)(CMCITY));
            _row["CMSTATE"] = ((string)(CMSTATE));
            _row["CMPOSTCODE"] = ((string)(CMPOSTCODE));
            _row["CMACTIVE"] = ((string)(CMACTIVE));
            _row["CMFAX"] = ((decimal)(CMFAX));
            _row["CMPHONE"] = ((string)(CMPHONE));
            _row["CMUSRFLGS"] = ((string)(CMUSRFLGS));
            _row["CMCONTACT"] = ((string)(CMCONTACT));
            _row["CMCONEMAL"] = ((string)(CMCONEMAL));
            _row["CMYN01"] = ((string)(CMYN01));
            _row["CMYN02"] = ((string)(CMYN02));
            _row["CMYN03"] = ((string)(CMYN03));
        }
        private void PopulateFieldsCustomerL1(string _, AdgDataSet _dataSet)
        {
            var _table = _dataSet.SetActive("*FILE");
            System.Data.DataRow _row = _table.Row;
            CMCUSTNO = ((decimal)(_row["CMCUSTNO"]));
            CMNAME = ((string)(_row["CMNAME"]));
            CMADDR1 = ((string)(_row["CMADDR1"]));
            CMADDR2 = ((string)(_row["CMADDR2"]));
            CMCITY = ((string)(_row["CMCITY"]));
            CMSTATE = ((string)(_row["CMSTATE"]));
            CMPOSTCODE = ((string)(_row["CMPOSTCODE"]));
            CMACTIVE = ((string)(_row["CMACTIVE"]));
            CMFAX = ((decimal)(_row["CMFAX"]));
            CMPHONE = ((string)(_row["CMPHONE"]));
            CMUSRFLGS = ((string)(_row["CMUSRFLGS"]));
            CMCONTACT = ((string)(_row["CMCONTACT"]));
            CMCONEMAL = ((string)(_row["CMCONEMAL"]));
            CMYN01 = ((string)(_row["CMYN01"]));
            CMYN02 = ((string)(_row["CMYN02"]));
            CMYN03 = ((string)(_row["CMYN03"]));
        }
        private DataStructure buildDSOrdhDS()
        {
            return new DataStructure(OrdhDS_000, OrdhDS_001, OrdhDS_002, OrdhDS_003, OrdhDS_004, OrdhDS_005, OrdhDS_006, OrdhDS_007, OrdhDS_008);
        }
    }
}
